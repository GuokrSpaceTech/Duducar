package com.guokrspace.duducar.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.guokrspace.duducar.database.PersonalInformation;
import com.guokrspace.duducar.database.OrderRecord;
import com.guokrspace.duducar.database.SearchHistory;
import com.guokrspace.duducar.database.DriverRecord;
import com.guokrspace.duducar.database.MessageInfo;

import com.guokrspace.duducar.database.PersonalInformationDao;
import com.guokrspace.duducar.database.OrderRecordDao;
import com.guokrspace.duducar.database.SearchHistoryDao;
import com.guokrspace.duducar.database.DriverRecordDao;
import com.guokrspace.duducar.database.MessageInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig personalInformationDaoConfig;
    private final DaoConfig orderRecordDaoConfig;
    private final DaoConfig searchHistoryDaoConfig;
    private final DaoConfig driverRecordDaoConfig;
    private final DaoConfig messageInfoDaoConfig;

    private final PersonalInformationDao personalInformationDao;
    private final OrderRecordDao orderRecordDao;
    private final SearchHistoryDao searchHistoryDao;
    private final DriverRecordDao driverRecordDao;
    private final MessageInfoDao messageInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        personalInformationDaoConfig = daoConfigMap.get(PersonalInformationDao.class).clone();
        personalInformationDaoConfig.initIdentityScope(type);

        orderRecordDaoConfig = daoConfigMap.get(OrderRecordDao.class).clone();
        orderRecordDaoConfig.initIdentityScope(type);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        driverRecordDaoConfig = daoConfigMap.get(DriverRecordDao.class).clone();
        driverRecordDaoConfig.initIdentityScope(type);

        messageInfoDaoConfig = daoConfigMap.get(MessageInfoDao.class).clone();
        messageInfoDaoConfig.initIdentityScope(type);

        personalInformationDao = new PersonalInformationDao(personalInformationDaoConfig, this);
        orderRecordDao = new OrderRecordDao(orderRecordDaoConfig, this);
        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);
        driverRecordDao = new DriverRecordDao(driverRecordDaoConfig, this);
        messageInfoDao = new MessageInfoDao(messageInfoDaoConfig, this);

        registerDao(PersonalInformation.class, personalInformationDao);
        registerDao(OrderRecord.class, orderRecordDao);
        registerDao(SearchHistory.class, searchHistoryDao);
        registerDao(DriverRecord.class, driverRecordDao);
        registerDao(MessageInfo.class, messageInfoDao);
    }
    
    public void clear() {
        personalInformationDaoConfig.getIdentityScope().clear();
        orderRecordDaoConfig.getIdentityScope().clear();
        searchHistoryDaoConfig.getIdentityScope().clear();
        driverRecordDaoConfig.getIdentityScope().clear();
        messageInfoDaoConfig.getIdentityScope().clear();
    }

    public PersonalInformationDao getPersonalInformationDao() {
        return personalInformationDao;
    }

    public OrderRecordDao getOrderRecordDao() {
        return orderRecordDao;
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

    public DriverRecordDao getDriverRecordDao() {
        return driverRecordDao;
    }

    public MessageInfoDao getMessageInfoDao() {
        return messageInfoDao;
    }

}
