apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.guokrspace.duducar"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 9
        versionName "beta1.3"
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            jniLibs.srcDirs = ['jniLibs']
        }
    }

    signingConfigs {
        release {
            keyAlias 'mactop2013'
            keyPassword 'mactop2013'
            storeFile file('/Users/hyman/Documents/AndroidDevelopment/guokrspace')
            storePassword 'guokrspace'
        }
        debug
    }

    buildTypes {
        release {
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为duducar_beta1.0_wandoujia.apk
                        def fileName = "duducar_${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    productFlavors {
        wandoujia {}
        baidu {}
        yingyongbao {}
        huawei {}
    }

    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [CHANNEL_NAME: flavor.name]
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        android.signingConfigs.debug.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.debug.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.debug.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.debug.keyPassword = props['KEY_PASSWORD']

    } else {
        android.buildTypes.release.signingConfig = null
        android.buildTypes.debug.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
    android.buildTypes.debug.signingConfig = null
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library_slidingmenu')
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.github.dexafree:materiallist:3.1.2'
    compile 'de.greenrobot:greendao:1.3.7'
    compile 'de.greenrobot:greendao-generator:1.3.1'
    compile 'com.android.support:design:23.1.0'
    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile 'com.zhy:okhttputils:1.0.2'
    compile 'me.drakeet.materialdialog:library:1.2.8'
}
